# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    environment:
      # tell pipenv
      PIPENV_VENV_IN_PROJECT: true
      CC_TEST_REPORTER_ID: c9ec35db75642b31c9d4d818e9efae69202fc4f2a0c2bb35f56ebeef28c4031f

    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.6

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "Pipfile.lock" }}


      - run:
          name: install dependencies
          command: |
            pipenv install -d

      # give CircleCi access to cached venv
      - run:
          name: Fix permissions on venv
          command: sudo chown -R circleci:circleci ".venv"

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # do caching magic
      - save_cache:
          paths:
            - ".venv"
          key: v3-dependencies-{{ checksum "Pipfile.lock" }}

      # run tests
      - run:
          name: run tests
          command: |

            ./cc-test-reporter before-build
            pipenv run pytest -v --cov --cov-report xml --junit-xml=test-reports/pytest.xml  --doctest-modules
            ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?

      - store_artifacts:
          path: logs/unit_tests.log

      - store_artifacts:
          path: test-reports


      - store_test_results:
          path: test-reports


notify:
  branches:
    - all
  webhooks:
    - url: http://orthanc.localecho.net/cgi-bin/webhook.py